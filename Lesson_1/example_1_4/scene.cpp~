#include "scene.h"

Scene::Scene(QWidget *parent)
    : QGLWidget(parent)
{
    timer = new QTimer(this);
    timer->setInterval(33);
    connect(timer,SIGNAL(timeout()),this,SLOT(updateGL()));
    timer->start();
}

void Scene::initializeGL()
{
    glClearColor(0.0,0.0,0.0,0.0); //Задаем цвет очистки полотна
}

void Scene::resizeGL(int w, int h)
{
    glViewport(0,0,(GLsizei)w,(GLsizei)h); //Задаем порт просмотра. В данном случае
                                           //Все изображение будет полным, то есть
                                           //картинка будет показываться на всем полотне
                                           //с нижнего левого угла,"glViewport(0,0,.."
                                           //по правый верхний "..(GLsizei)w,(GLsizei)h);"
    /*
     * GLsizei - это тип определенный машиной OpenGL переопределяющий стандартный
     *           тип размеров в языке С. Соответствует обычному int. Делаются такие
     *           переопределения, для переносимеости OGL кода, чтобы на разных машинах
     *           работал один и тот же OGL код.
     * GLint   - Соответствует также типу int.
     * GLfloat - Соответствует типу float.
     *
     *           Чтобы посмотреть все типы, можно перейти к реализации их переопределения
     *           кликнув на один из этих типов(например на GLsizei) с зажатым <Ctrl>
     * */

    glOrtho(0,1,0,1,1,-1); //Задаем координатную ось для нашего пространства
}

void Scene::paintGL()
{
    glClear(GL_COLOR_BUFFER_BIT); /* В данном методе очищаем буфер цвета
                                     т.е. в данный момент, очищаем ЧЕРНЫМ
                                     цветом, который задали функцией
                                     glClearColor, все наше полотно. Без
                                     его вызовы полотно бы не очищалось,
                                     и все объекты на полотне, оставались
                                     бы.
                                  */


    glColor3f(0.4,0.2,0.0);     //Задает состояние текущего цвета рисования.
                                //0.4 красного, 0.2 зеленого, 0.0 синего.
                                //"тройка" в названии функции значит количество
                                //аргументов принимаемых данной функцией
                                //"f" - тип аргументов данной функции(float)

    glBegin(GL_POLYGON);        //Начало функциональных скобок, захвата отображаемых объектов в OGL.
                                //GL_POLYGON - отрисовка полигона. То есть фигуры, с неограниченным
                                //количеством вершин

    glVertex3f(0.25,0.25,0.0);  //Указываем вершины по порядку
    glVertex3f(0.75,0.25,0.0);
    glVertex3f(0.75,0.75,0.0);
    glVertex3f(0.25,0.75,0.0);

    glEnd();                    //Конец отрисовки объекта/объектов
}

Scene::~Scene()
{

}

